apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: rating-microservice-backend
    name: rating-microservice-backend
  spec:
    type: NodePort
    ports:
    - name: "5007"
      port: 5007
      targetPort: 80
    selector:
      io.kompose.service: rating-microservice-backend
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: rating-microservice-backend-db
    name: rating-microservice-backend-db
  spec:
    type: ClusterIP
    ports:
    - name: "1433"
      port: 1433
      targetPort: 1433
    selector:
      io.kompose.service: rating-microservice-backend-db
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: rating-microservice-backend
    name: rating-microservice-backend
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: rating-microservice-backend
      spec:
        containers:
        - env:
          - name: ASPNETCORE_ENVIRONMENT
            value: Production
          - name: SQLSERVER
            value: server=rating-microservice-backend-db;database=RatingDatabase;User
              Id=sa;Password=Qwerty@123456;
          image: teamcureassist/rating-microservice-backend:<VERSION>
          name: rating-microservice-backend
          ports:
          - containerPort: 80
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kube-manifest.yaml
      kompose.version: 1.18.0 (06a2e56)
    creationTimestamp: null
    labels:
      io.kompose.service: rating-microservice-backend-db
    name: rating-microservice-backend-db
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: rating-microservice-backend-db
      spec:
        containers:
        - env:
          - name: ACCEPT_EULA
            value: "Y"
          - name: SA_PASSWORD
            value: Qwerty@123456
          image: mcr.microsoft.com/mssql/server
          name: rating-microservice-backend-db
          ports:
          - containerPort: 1433
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    name: rating-portal-ingress
    annotations:
     nginx.ingress.kubernetes.io/rewrite-target: /
  spec:
    rules:
    - host: rating-api.cureassist.cgi-wave7.stackroute.io
      http:
        paths:
        - path: /
          backend:
            serviceName: rating-microservice-backend
            servicePort: 80
kind: List
metadata: {}

