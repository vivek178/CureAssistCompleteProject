{
  "swagger": "2.0",
  "info": {
    "description": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
    "version": "1.0.0",
    "title": "Swagger Appointment",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "petstore.swagger.io",
  "basePath": "/v2",
  "tags": [
    {
      "name": "Appointment",
      "description": "Everything about your Appointment",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/Appointments": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "summary": "Create a new Appointment for doctor, Patient and DC",
        "description": "",
        "operationId": "BookAppointment",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Appointment object that need to be crearted",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentRequest"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/Appointments/Allappointments": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Find All Appointment by UserId",
        "description": "Get List of Appointment for that Specific UserId. Accept only one user Id.",
        "operationId": "GetAllAppointmentByUserID",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DayAppointment"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/Appointments/DayAppointment": {
      "get": {
        "tags": [
          "Appointment"
        ],
        "summary": "Find Specific Day Appointment",
        "description": "Returns a single day Appointment",
        "operationId": "GetAppointmentByUserIdAndDate",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DayAppointment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    }
  },
  "definitions": {
    "AppointmentRequest": {
      "type": "object",
      "properties": {
        "attendees": {
          "type": "string",
          "format": "List<string>"
        },
        "slot": {
          "type": "string",
          "format": "TimeSlot"
        }
      }
    },
    "DayCalendar": {
      "type": "object",
      "properties": {
        "DayCalendarId": {
          "type": "string",
          "format": "string"
        },
        "UserId": {
          "type": "string",
          "format": "string"
        },
        "Date": {
          "type": "string",
          "format": "DateTime"
        },
        "Slots": {
          "type": "string",
          "format": "List<Slot>"
        }
      }
    },
    "Slot": {
      "type": "object",
      "properties": {
        "TimeSlot": {
          "type": "integer",
          "format": "TimeSlot"
        },
        "Attendees": {
          "type": "string",
          "format": "List<string>"
        }
      }
    },
    "TimeSlot": {
      "type": "object",
      "properties": {
        "Date": {
          "type": "string",
          "format": "DateTime"
        },
        "StartTime": {
          "type": "string",
          "format": "DateTime"
        },
        "EndTime": {
          "type": "string",
          "format": "DateTime"
        }
      }
    },
    "DayAppointment": {
      "type": "object",
      "properties": {
        "UserId": {
          "type": "string",
          "format": "string"
        },
        "Date": {
          "type": "string",
          "format": "DateTime"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}